using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows;
using Microsoft.Practices.Unity;
using BGU.DRPL.SignificantOwnership.Core.Questionnaires;
using BGU.DRPL.SignificantOwnership.Core.Spares.Data;
using BGU.DRPL.SignificantOwnership.Core.Spares.Dict;
using BGU.DRPL.SignificantOwnership.Core.Spares;

namespace BGU.DRPL.SignificantOwnership.Core.TypeEditors
{
    #region The editors
    // p.I

    public class Appx2OwnershipStructLP_Editor : GenericTypeEditor<Appx2OwnershipStructLP> { private IAppx2OwnershipStructLPEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IAppx2OwnershipStructLPEditFormFactory>(); return _fact; } } }
    public class RegLicAppx14NewSvc_Editor : GenericTypeEditor<RegLicAppx14NewSvc> { private IRegLicAppx14NewSvcEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx14NewSvcEditFormFactory>(); return _fact; } } }
    public class RegLicAppx2OwnershipAcqRequestLP_Editor : GenericTypeEditor<RegLicAppx2OwnershipAcqRequestLP> { private IRegLicAppx2OwnershipAcqRequestLPEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx2OwnershipAcqRequestLPEditFormFactory>(); return _fact; } } }
    public class RegLicAppx4PhysPQuest_Editor : GenericTypeEditor<RegLicAppx4OwnershipAcqRequestPP> { private IRegLicAppx4PhysPQuestEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx4PhysPQuestEditFormFactory>(); return _fact; } } }
    public class RegLicAppx7ShareAcqIntent_Editor : GenericTypeEditor<RegLicAppx7ShareAcqIntent> { private IRegLicAppx7ShareAcqIntentEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx7ShareAcqIntentEditFormFactory>(); return _fact; } } }
    public class AttachmentInfo_Editor : GenericTypeEditor<AttachmentInfo> { private IAttachmentInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IAttachmentInfoEditFormFactory>(); return _fact; } } }
    public class BankingLicensedActivityInfo_Editor : GenericTypeEditor<BankingLicensedActivityInfo> { private IBankingLicensedActivityInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IBankingLicensedActivityInfoEditFormFactory>(); return _fact; } } }
    public class BankingLicenseInfo_Editor : GenericTypeEditor<BankingLicenseInfo> { private IBankingLicenseInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IBankingLicenseInfoEditFormFactory>(); return _fact; } } }
    public class CommonOwnershipInfo_Editor : GenericTypeEditor<CommonOwnershipInfo> { private ICommonOwnershipInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICommonOwnershipInfoEditFormFactory>(); return _fact; } } }
    public class ContactInfo_Editor : GenericTypeEditor<ContactInfo> { private IContactInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IContactInfoEditFormFactory>(); return _fact; } } }
    public class CouncilBodyInfo_Editor : GenericTypeEditor<CouncilBodyInfo> { private ICouncilBodyInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICouncilBodyInfoEditFormFactory>(); return _fact; } } }
    public class CouncilMemberInfo_Editor : GenericTypeEditor<CouncilMemberInfo> { private ICouncilMemberInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICouncilMemberInfoEditFormFactory>(); return _fact; } } }
    public class CurrencyAmount_Editor : GenericTypeEditor<CurrencyAmount> { private ICurrencyAmountEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICurrencyAmountEditFormFactory>(); return _fact; } } }
    public class GenericPersonID_Editor : GenericTypeEditor<GenericPersonID> { private IGenericPersonIDEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IGenericPersonIDEditFormFactory>(); return _fact; } } }
    public class GenericPersonIDShare_Editor : GenericTypeEditor<GenericPersonIDShare> { private IGenericPersonIDShareEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IGenericPersonIDShareEditFormFactory>(); return _fact; } } }
    public class GenericPersonInfo_Editor : GenericTypeEditor<GenericPersonInfo> { private IGenericPersonInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IGenericPersonInfoEditFormFactory>(); return _fact; } } }
    public class LegalPersonShareInfo_Editor : GenericTypeEditor<LegalPersonShareInfo> { private ILegalPersonShareInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILegalPersonShareInfoEditFormFactory>(); return _fact; } } }
    public class OwnershipStructure_Editor : GenericTypeEditor<OwnershipStructure> { private IOwnershipStructureEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IOwnershipStructureEditFormFactory>(); return _fact; } } }
    public class OwnershipSummaryInfo_Editor : GenericTypeEditor<OwnershipSummaryInfo> { private IOwnershipSummaryInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IOwnershipSummaryInfoEditFormFactory>(); return _fact; } } }
    public class OwnershipVotesInfo_Editor : GenericTypeEditor<OwnershipVotesInfo> { private IOwnershipVotesInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IOwnershipVotesInfoEditFormFactory>(); return _fact; } } }
    public class PersonsAssociation_Editor : GenericTypeEditor<PersonsAssociation> { private IPersonsAssociationEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPersonsAssociationEditFormFactory>(); return _fact; } } }
    public class PhoneInfo_Editor : GenericTypeEditor<PhoneInfo> { private IPhoneInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPhoneInfoEditFormFactory>(); return _fact; } } }
    public class PhysicalPersonShareInfo_Editor : GenericTypeEditor<PhysicalPersonShareInfo> { private IPhysicalPersonShareInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPhysicalPersonShareInfoEditFormFactory>(); return _fact; } } }
    public class PurchasedVoteInfo_Editor : GenericTypeEditor<PurchasedVoteInfo> { private IPurchasedVoteInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPurchasedVoteInfoEditFormFactory>(); return _fact; } } }
    public class SignatoryInfo_Editor : GenericTypeEditor<SignatoryInfo> { private ISignatoryInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ISignatoryInfoEditFormFactory>(); return _fact; } } }
    public class TotalOwnershipDetailsInfo_Editor : GenericTypeEditor<TotalOwnershipDetailsInfo> { private ITotalOwnershipDetailsInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ITotalOwnershipDetailsInfoEditFormFactory>(); return _fact; } } }
    public class BankInfo_Editor : GenericTypeEditor<BankInfo> { private IBankInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IBankInfoEditFormFactory>(); return _fact; } } }
    public class CountryInfo_Editor : GenericTypeEditor<CountryInfo> { private ICountryInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICountryInfoEditFormFactory>(); return _fact; } } }
    public class LegalPersonInfo_Editor : GenericTypeEditor<LegalPersonInfo> { private ILegalPersonInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILegalPersonInfoEditFormFactory>(); return _fact; } } }
    public class LocationInfo_Editor : GenericTypeEditor<LocationInfo> { private ILocationInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILocationInfoEditFormFactory>(); return _fact; } } }
    public class PhysicalPersonInfo_Editor : GenericTypeEditor<PhysicalPersonInfo> { private IPhysicalPersonInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPhysicalPersonInfoEditFormFactory>(); return _fact; } } }
    public class RegistrarAuthority_Editor : GenericTypeEditor<RegistrarAuthority> { private IRegistrarAuthorityEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegistrarAuthorityEditFormFactory>(); return _fact; } } }
    
    //p.II

    public class BreachOfLawRecordInfo_Editor : GenericTypeEditor<BreachOfLawRecordInfo> { private IBreachOfLawRecordInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IBreachOfLawRecordInfoEditFormFactory>(); return _fact; } } }
    public class EducationRecordInfo_Editor : GenericTypeEditor<EducationRecordInfo> { private IEducationRecordInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IEducationRecordInfoEditFormFactory>(); return _fact; } } }
    public class EmploymentRecordInfo_Editor : GenericTypeEditor<EmploymentRecordInfo> { private IEmploymentRecordInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IEmploymentRecordInfoEditFormFactory>(); return _fact; } } }
    public class FinancialGuaranteeInfo_Editor : GenericTypeEditor<FinancialGuaranteeInfo> { private IFinancialGuaranteeInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IFinancialGuaranteeInfoEditFormFactory>(); return _fact; } } }
    public class IncomeOriginInfo_Editor : GenericTypeEditor<IncomeOriginInfo> { private IIncomeOriginInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IIncomeOriginInfoEditFormFactory>(); return _fact; } } }
    public class IndebtnessInfo_Editor : GenericTypeEditor<IndebtnessInfo> { private IIndebtnessInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IIndebtnessInfoEditFormFactory>(); return _fact; } } }
    public class IndebtnessInfoBase_Editor : GenericTypeEditor<IndebtnessInfoBase> { private IIndebtnessInfoBaseEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IIndebtnessInfoBaseEditFormFactory>(); return _fact; } } }
    public class LiquidatedEntityOwnershipInfo_Editor : GenericTypeEditor<LiquidatedEntityOwnershipInfo> { private ILiquidatedEntityOwnershipInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILiquidatedEntityOwnershipInfoEditFormFactory>(); return _fact; } } }
    public class LoanInfo_Editor : GenericTypeEditor<LoanInfo> { private ILoanInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILoanInfoEditFormFactory>(); return _fact; } } }
    public class PaymentDeadlineInfo_Editor : GenericTypeEditor<PaymentDeadlineInfo> { private IPaymentDeadlineInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPaymentDeadlineInfoEditFormFactory>(); return _fact; } } }
    public class PaymentModeInfo_Editor : GenericTypeEditor<PaymentModeInfo> { private IPaymentModeInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPaymentModeInfoEditFormFactory>(); return _fact; } } }
    public class ProfessionLicenseInfo_Editor : GenericTypeEditor<ProfessionLicenseInfo> { private IProfessionLicenseInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IProfessionLicenseInfoEditFormFactory>(); return _fact; } } }
    public class SharesAcquisitionInfo_Editor : GenericTypeEditor<SharesAcquisitionInfo> { private ISharesAcquisitionInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ISharesAcquisitionInfoEditFormFactory>(); return _fact; } } }
    public class BankAccountInfo_Editor : GenericTypeEditor<BankAccountInfo> { private IBankAccountInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IBankAccountInfoEditFormFactory>(); return _fact; } } }
    public class ProfessionLicensingBodyInfo_Editor : GenericTypeEditor<ProfessionLicensingBodyInfo> { private IProfessionLicensingBodyInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IProfessionLicensingBodyInfoEditFormFactory>(); return _fact; } } }
    public class PublicationInfo_Editor : GenericTypeEditor<PublicationInfo> { private IPublicationInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPublicationInfoEditFormFactory>(); return _fact; } } }
    public class PublishingHouseInfo_Editor : GenericTypeEditor<PublishingHouseInfo> { private IPublishingHouseInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPublishingHouseInfoEditFormFactory>(); return _fact; } } }
    public class UniversityOrCollegeInfo_Editor : GenericTypeEditor<UniversityOrCollegeInfo> { private IUniversityOrCollegeInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IUniversityOrCollegeInfoEditFormFactory>(); return _fact; } } }
    public class FinancialOversightAuthorityInfo_Editor : GenericTypeEditor<FinancialOversightAuthorityInfo> { private IFinancialOversightAuthorityInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IFinancialOversightAuthorityInfoEditFormFactory>(); return _fact; } } }

    public class CourtInfo_Editor : GenericTypeEditor<CourtInfo> { private ICourtInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICourtInfoEditFormFactory>(); return _fact; } } }
    public class LPRegisteredDateRecordId_Editor : GenericTypeEditor<LPRegisteredDateRecordId> { private ILPRegisteredDateRecordIdEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILPRegisteredDateRecordIdEditFormFactory>(); return _fact; } } }
    public class EmailInfo_Editor : GenericTypeEditor<EmailInfo> { private IEmailInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IEmailInfoEditFormFactory>(); return _fact; } } }
    public class CreditRatingInfo_Editor : GenericTypeEditor<CreditRatingInfo> { private ICreditRatingInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICreditRatingInfoEditFormFactory>(); return _fact; } } }
    public class RegLicAppx12HeadCandidateAppl_Editor : GenericTypeEditor<RegLicAppx12HeadCandidateAppl> { private IRegLicAppx12HeadCandidateApplEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx12HeadCandidateApplEditFormFactory>(); return _fact; } } }
    public class BankruptcyInvestigationInfo_Editor : GenericTypeEditor<BankruptcyInvestigationInfo> { private IBankruptcyInvestigationInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IBankruptcyInvestigationInfoEditFormFactory>(); return _fact; } } }
    public class LiquidatedOrInsolventEntityInfoBase_Editor : GenericTypeEditor<LiquidatedOrInsolventEntityInfoBase> { private ILiquidatedOrInsolventEntityInfoBaseEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILiquidatedOrInsolventEntityInfoBaseEditFormFactory>(); return _fact; } } }
    public class RegLicAppx9BankingLicenseAppl_Editor : GenericTypeEditor<RegLicAppx9BankingLicenseAppl> { private IRegLicAppx9BankingLicenseApplEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx9BankingLicenseApplEditFormFactory>(); return _fact; } } }
    public class ManagementPosition_Editor : GenericTypeEditor<ManagementPosition> { private IManagementPositionEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IManagementPositionEditFormFactory>(); return _fact; } } }
    public class InsolvencyStatus_Editor : GenericTypeEditor<InsolvencyStatus> { private IInsolvencyStatusEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IInsolvencyStatusEditFormFactory>(); return _fact; } } }
    public class WellKnownCreditRatingAgencyType_Editor : GenericTypeEditor<WellKnownCreditRatingAgencyType> { private IWellKnownCreditRatingAgencyTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IWellKnownCreditRatingAgencyTypeEditFormFactory>(); return _fact; } } }
    public class LongTermCreditRatingType_Editor : GenericTypeEditor<LongTermCreditRatingType> { private ILongTermCreditRatingTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILongTermCreditRatingTypeEditFormFactory>(); return _fact; } } }
    public class ShortTermCreditRatingType_Editor : GenericTypeEditor<ShortTermCreditRatingType> { private IShortTermCreditRatingTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IShortTermCreditRatingTypeEditFormFactory>(); return _fact; } } }
    public class BankruptcyCaseResolutionType_Editor : GenericTypeEditor<BankruptcyCaseResolutionType> { private IBankruptcyCaseResolutionTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IBankruptcyCaseResolutionTypeEditFormFactory>(); return _fact; } } }
    public class CourtInstanceType_Editor : GenericTypeEditor<CourtInstanceType> { private ICourtInstanceTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICourtInstanceTypeEditFormFactory>(); return _fact; } } }
    public class CourtDecisionType_Editor : GenericTypeEditor<CourtDecisionType> { private ICourtDecisionTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICourtDecisionTypeEditFormFactory>(); return _fact; } } }
    public class BankAssociatedPeronsCode315p_Editor : GenericTypeEditor<BankAssociatedPeronsCode315p> { private IBankAssociatedPeronsCode315pEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IBankAssociatedPeronsCode315pEditFormFactory>(); return _fact; } } }
    public class LegalTransactionType_Editor : GenericTypeEditor<LegalTransactionType> { private ILegalTransactionTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILegalTransactionTypeEditFormFactory>(); return _fact; } } }
    public class InfluenceType_Editor : GenericTypeEditor<InfluenceType> { private IInfluenceTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IInfluenceTypeEditFormFactory>(); return _fact; } } }
    public class LiquidatedOrInsolventEntityMgmtRecordInfo_Editor : GenericTypeEditor<LiquidatedOrInsolventEntityMgmtRecordInfo> { private ILiquidatedOrInsolventEntityMgmtRecordInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILiquidatedOrInsolventEntityMgmtRecordInfoEditFormFactory>(); return _fact; } } }
    public class CharterCapitalTableRecord_Editor : GenericTypeEditor<CharterCapitalTableRecord> { private ICharterCapitalTableRecordEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICharterCapitalTableRecordEditFormFactory>(); return _fact; } } }
    public class RegLicAppx6EquityFormationTable_Editor : GenericTypeEditor<RegLicAppx6EquityFormationTable> { private IRegLicAppx6EquityFormationTableEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx6EquityFormationTableEditFormFactory>(); return _fact; } } }
    public class RatingAgencyInfo_Editor : GenericTypeEditor<RatingAgencyInfo> { private IRatingAgencyInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRatingAgencyInfoEditFormFactory>(); return _fact; } } }
    public class EconomicActivityType_Editor : GenericTypeEditor<EconomicActivityType> { private IEconomicActivityTypeEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IEconomicActivityTypeEditFormFactory>(); return _fact; } } }
    public class CharterCapitalTableTotalsRecord_Editor : GenericTypeEditor<CharterCapitalTableTotalsRecord> { private ICharterCapitalTableTotalsRecordEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICharterCapitalTableTotalsRecordEditFormFactory>(); return _fact; } } }
    public class CourtDecisionInfo_Editor : GenericTypeEditor<CourtDecisionInfo> { private ICourtDecisionInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ICourtDecisionInfoEditFormFactory>(); return _fact; } } }
    public class LicenseQualificationInfo_Editor : GenericTypeEditor<LicenseQualificationInfo> { private ILicenseQualificationInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILicenseQualificationInfoEditFormFactory>(); return _fact; } } }
    public class IPOSharesPurchaseInfo_Editor : GenericTypeEditor<IPOSharesPurchaseInfo> { private IIPOSharesPurchaseInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IIPOSharesPurchaseInfoEditFormFactory>(); return _fact; } } }
    public class SecondaryMarketSharesPurchaseInfo_Editor : GenericTypeEditor<SecondaryMarketSharesPurchaseInfo> { private ISecondaryMarketSharesPurchaseInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ISecondaryMarketSharesPurchaseInfoEditFormFactory>(); return _fact; } } }
    public class RegLicAppx17EquityChangeTable_Editor : GenericTypeEditor<RegLicAppx17EquityChangeTable> { private IRegLicAppx17EquityChangeTableEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx17EquityChangeTableEditFormFactory>(); return _fact; } } }
    public class Appx3OwnershipStructPP_Editor : GenericTypeEditor<Appx3OwnershipStructPP> { private IAppx3OwnershipStructPPEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IAppx3OwnershipStructPPEditFormFactory>(); return _fact; } } }
    public class RegLicAppx3MemberCandidateAppl_Editor : GenericTypeEditor<RegLicAppx3MemberCandidateAppl> { private IRegLicAppx3MemberCandidateApplEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IRegLicAppx3MemberCandidateApplEditFormFactory>(); return _fact; } } }
    public class LegalTransactionInfo_Editor : GenericTypeEditor<LegalTransactionInfo> { private ILegalTransactionInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ILegalTransactionInfoEditFormFactory>(); return _fact; } } }
    public class PowerOfAttorneySharesPurchaseInfo_Editor : GenericTypeEditor<PowerOfAttorneySharesPurchaseInfo> { private IPowerOfAttorneySharesPurchaseInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPowerOfAttorneySharesPurchaseInfoEditFormFactory>(); return _fact; } } }
    public class SignificantOrDecisiveInfulenceInfo_Editor : GenericTypeEditor<SignificantOrDecisiveInfulenceInfo> { private ISignificantOrDecisiveInfulenceInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ISignificantOrDecisiveInfulenceInfoEditFormFactory>(); return _fact; } } }
    public class SignificantOwnershipAcquisitionWaysInfo_Editor : GenericTypeEditor<SignificantOwnershipAcquisitionWaysInfo> { private ISignificantOwnershipAcquisitionWaysInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ISignificantOwnershipAcquisitionWaysInfoEditFormFactory>(); return _fact; } } }
    public class TotalOwnershipSummaryInfo_Editor : GenericTypeEditor<TotalOwnershipSummaryInfo> { private ITotalOwnershipSummaryInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<ITotalOwnershipSummaryInfoEditFormFactory>(); return _fact; } } }
    public class ImperfectBusinessReputationInfo_Editor : GenericTypeEditor<ImperfectBusinessReputationInfo> { private IImperfectBusinessReputationInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IImperfectBusinessReputationInfoEditFormFactory>(); return _fact; } } }
    public class PowerOfAttorneyInfo_Editor : GenericTypeEditor<PowerOfAttorneyInfo> { private IPowerOfAttorneyInfoEditFormFactory _fact; protected override ITypeEditorFormFactoryBase TypeEditorFormFactory { get { if (_fact == null) _fact = TypeEditorsDispatcher.Container.Resolve<IPowerOfAttorneyInfoEditFormFactory>(); return _fact; } } }

    #endregion

    #region other related type(s)
    public class NeedToCompareTypesArgs<T> : EventArgs
    {
        public NeedToCompareTypesArgs(T one, T two)
        {
            One = one; Two = two;
        }
        public T One { get; private set; }
        public T Two { get; private set; }
        public bool AreEqual { get; set; }
    }

    public delegate void NeedToCompareTypesHandler<T>(object sender, NeedToCompareTypesArgs<T> args);
    #endregion
}
